[
  {
    "name": "byte[]"
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "LOWER_DOT_CASE"
      },
      {
        "name": "SNAKE_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.gson.Gson",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.gson.GsonBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.persistence.EntityManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityManagerFactory",
    "condition": {
      "typeReachable": "org.springframework.orm.jpa.SharedEntityManagerCreator"
    },
    "methods": [
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetamodel",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.NamedEntityGraph",
    "condition": {
      "typeReachable": "org.springframework.data.jpa.repository.EntityGraph"
    },
    "allPublicMethods": true
  },
  {
    "name": "jakarta.persistence.Query",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getResultStream",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.Filter",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.Servlet",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletConfig",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.Validator",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.ValidatorFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.Closeable",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.io.File"
  },
  {
    "name": "java.io.InputStream"
  },
  {
    "name": "java.lang.Boolean"
  },
  {
    "name": "java.lang.Character"
  },
  {
    "name": "java.lang.Enum",
    "methods": [
      {
        "name": "getDeclaringClass",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Integer"
  },
  {
    "name": "java.lang.Iterable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Long"
  },
  {
    "name": "java.lang.Number"
  },
  {
    "name": "java.lang.Object",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.math.BigDecimal"
  },
  {
    "name": "java.net.InetSocketAddress"
  },
  {
    "name": "java.net.SocketAddress"
  },
  {
    "name": "java.net.URI",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.net.URL"
  },
  {
    "name": "java.nio.charset.Charset"
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "toLocalDate",
        "parameterTypes": [ ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Wrapper",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.time.Duration"
  },
  {
    "name": "java.time.Instant"
  },
  {
    "name": "java.time.LocalDateTime"
  },
  {
    "name": "java.time.ZonedDateTime"
  },
  {
    "name": "java.util.AbstractMap"
  },
  {
    "name": "java.util.concurrent.CompletableFuture"
  },
  {
    "name": "java.util.concurrent.Executor",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.EventListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.HashMap",
    "methods": [
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.LinkedHashMap"
  },
  {
    "name": "java.util.List"
  },
  {
    "name": "java.util.Locale"
  },
  {
    "name": "java.util.Locale$LanguageRange"
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "java.util.Properties",
    "allPublicMethods": true
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.sql.CommonDataSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "net.ideahut.springboot.admin.AdminController",
    "methods": [
      {
        "name": "auditFields",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "auditList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "cacheClear",
        "parameterTypes": [ ]
      },
      {
        "name": "cacheDelete",
        "parameterTypes": [ ]
      },
      {
        "name": "cacheInfo",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "cacheKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "check",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "crud",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "entityGrid",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "entityReplica",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Integer"
        ]
      },
      {
        "name": "grid",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "info",
        "parameterTypes": [ ]
      },
      {
        "name": "managerEntities",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Integer",
          "java.lang.Integer",
          "java.lang.String"
        ]
      },
      {
        "name": "managerInfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "managerInfo",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "menus",
        "parameterTypes": [ ]
      },
      {
        "name": "redisFlushAll",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "redisFlushAll",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "redisFlushDb",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "redisFlushDb",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "redisInfos",
        "parameterTypes": [ ]
      },
      {
        "name": "redisProperties",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "reload",
        "parameterTypes": [ ]
      },
      {
        "name": "reload",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "schedulerAdd",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "schedulerDelete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "schedulerGroups",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "schedulerMetadata",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "schedulerPause",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "schedulerResume",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "schedulerRunning",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "schedulerStart",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "schedulerStop",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "schedulerTrigger",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "schedulerTriggers",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Boolean",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.admin.AdminHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.admin.AdminProperties",
    "methods": [
      {
        "name": "getApi",
        "parameterTypes": [ ]
      },
      {
        "name": "getCrud",
        "parameterTypes": [ ]
      },
      {
        "name": "getGrid",
        "parameterTypes": [ ]
      },
      {
        "name": "getModules",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "setApi",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Api"
        ]
      },
      {
        "name": "setCrud",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Crud"
        ]
      },
      {
        "name": "setGrid",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Grid"
        ]
      },
      {
        "name": "setModules",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Modules"
        ]
      },
      {
        "name": "setResource",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Resource"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.admin.AdminProperties$Api",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getInfoHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoginPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogoutPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setInfoHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoutPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.admin.AdminProperties$Crud",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseNative",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUseNative",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.admin.AdminProperties$Grid",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnable",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.admin.AdminProperties$Module",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnable",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.admin.AdminProperties$Modules",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAudit",
        "parameterTypes": [ ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getEntity",
        "parameterTypes": [ ]
      },
      {
        "name": "getGrid",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedis",
        "parameterTypes": [ ]
      },
      {
        "name": "getReload",
        "parameterTypes": [ ]
      },
      {
        "name": "getScheduler",
        "parameterTypes": [ ]
      },
      {
        "name": "setAudit",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Module"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Module"
        ]
      },
      {
        "name": "setEntity",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Module"
        ]
      },
      {
        "name": "setGrid",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Module"
        ]
      },
      {
        "name": "setRedis",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Module"
        ]
      },
      {
        "name": "setReload",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Module"
        ]
      },
      {
        "name": "setScheduler",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminProperties$Module"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.admin.AdminProperties$Resource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getAlwaysToIndex",
        "parameterTypes": [ ]
      },
      {
        "name": "getIndexFile",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirectParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedPaths",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setAlwaysToIndex",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIndexFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRedirectParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.admin.AdminSecurity",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.audit.AuditHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.bean.BeanConfigure",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.bean.BeanReload",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.cache.CacheGroupHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.cache.CacheGroupProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getExpiry",
        "parameterTypes": [ ]
      },
      {
        "name": "getLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getNullable",
        "parameterTypes": [ ]
      },
      {
        "name": "setExpiry",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNullable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.cache.CacheHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.crud.Condition",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getBuilder",
        "parameterTypes": [ ]
      },
      {
        "name": "isConvert",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.crud.Condition$Builder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.crud.CrudHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.crud.CrudPermission",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.crud.CrudResource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.entity.EntityAudit",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "createdBy"
      },
      {
        "name": "updatedBy"
      }
    ],
    "methods": [
      {
        "name": "getCreatedBy",
        "parameterTypes": [ ]
      },
      {
        "name": "getCreatedOn",
        "parameterTypes": [ ]
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": [ ]
      },
      {
        "name": "getUpdatedOn",
        "parameterTypes": [ ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedOn",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdatedOn",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.entity.EntityAuditSoftDelete",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "deletedOn"
      }
    ],
    "methods": [
      {
        "name": "getDeletedOn",
        "parameterTypes": [ ]
      },
      {
        "name": "setDeletedOn",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.entity.EntityBase",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.entity.EntityPostListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.entity.EntityPreListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.entity.EntityTrxManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.grid.GridHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.init.InitEnum",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.init.InitHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.init.InitRequest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getInitBigDecimal",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitEnum",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitNumber",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitString",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitBigDecimal",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setInitEnum",
        "parameterTypes": [
          "net.ideahut.springboot.init.InitEnum"
        ]
      },
      {
        "name": "setInitNumber",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setInitString",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.job.JobService",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.job.SchedulerHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.mail.MailHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.mapper.DataMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.message.MessageHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.object.MapStringObject",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.object.Message",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getField",
        "parameterTypes": [ ]
      },
      {
        "name": "getObject",
        "parameterTypes": [ ]
      },
      {
        "name": "getText",
        "parameterTypes": [ ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setObject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.object.Result",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getData",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      },
      {
        "name": "getInfo",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInfo",
        "parameterTypes": [
          "net.ideahut.springboot.object.MapStringObject"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.security.RedisMemoryCredential",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.security.SecurityAuthorization",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.security.SecurityCredential",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.sysparam.SysParamDto",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBytes",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getParamCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getSysCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getValue",
        "parameterTypes": [ ]
      },
      {
        "name": "setBytes",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParamCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSysCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.sysparam.SysParamHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.task.TaskHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.ideahut.springboot.template.AppAdvice",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "appProperties"
      }
    ],
    "methods": [
      {
        "name": "handleAllException",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.Application",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.Application$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.Application__ApplicationContextInitializer",
    "condition": {
      "typeReachable": "net.ideahut.springboot.template.Application"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.AdminConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "applicationContext"
      },
      {
        "name": "appProperties"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "adminCredential",
        "parameterTypes": [
          "net.ideahut.springboot.mapper.DataMapper",
          "org.springframework.data.redis.core.RedisTemplate"
        ]
      },
      {
        "name": "adminHandler",
        "parameterTypes": [
          "net.ideahut.springboot.mapper.DataMapper",
          "org.springframework.data.redis.core.RedisTemplate"
        ]
      },
      {
        "name": "adminSecurity",
        "parameterTypes": [
          "net.ideahut.springboot.mapper.DataMapper",
          "net.ideahut.springboot.admin.AdminHandler",
          "net.ideahut.springboot.security.SecurityCredential"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.AdminConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.AdminConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.AdminConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.CommonConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "entityTrxManager",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.CommonConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.CommonConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.CommonConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.FilterConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "appProperties"
      },
      {
        "name": "environment"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "adminFilter",
        "parameterTypes": [
          "net.ideahut.springboot.admin.AdminHandler",
          "net.ideahut.springboot.security.SecurityAuthorization"
        ]
      },
      {
        "name": "defaultRequestFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.FilterConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.FilterConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.FilterConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.HandlerConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "applicationContext"
      },
      {
        "name": "appProperties"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "auditHandler",
        "parameterTypes": [
          "net.ideahut.springboot.entity.EntityTrxManager",
          "net.ideahut.springboot.task.TaskHandler"
        ]
      },
      {
        "name": "cacheGroupHandler",
        "parameterTypes": [
          "net.ideahut.springboot.mapper.DataMapper",
          "org.springframework.data.redis.core.RedisTemplate",
          "net.ideahut.springboot.task.TaskHandler"
        ]
      },
      {
        "name": "cacheHandler",
        "parameterTypes": [
          "net.ideahut.springboot.mapper.DataMapper",
          "org.springframework.data.redis.core.RedisTemplate",
          "net.ideahut.springboot.task.TaskHandler"
        ]
      },
      {
        "name": "crudHandler",
        "parameterTypes": [
          "net.ideahut.springboot.entity.EntityTrxManager",
          "net.ideahut.springboot.mapper.DataMapper",
          "net.ideahut.springboot.crud.CrudResource",
          "net.ideahut.springboot.crud.CrudPermission"
        ]
      },
      {
        "name": "crudPermission",
        "parameterTypes": [ ]
      },
      {
        "name": "crudResource",
        "parameterTypes": [
          "net.ideahut.springboot.entity.EntityTrxManager"
        ]
      },
      {
        "name": "gridHandler",
        "parameterTypes": [
          "net.ideahut.springboot.mapper.DataMapper",
          "org.springframework.data.redis.core.RedisTemplate"
        ]
      },
      {
        "name": "initHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "mailHandler",
        "parameterTypes": [
          "net.ideahut.springboot.task.TaskHandler"
        ]
      },
      {
        "name": "schedulerHandler",
        "parameterTypes": [
          "net.ideahut.springboot.mapper.DataMapper",
          "net.ideahut.springboot.job.JobService"
        ]
      },
      {
        "name": "sysParamHandler",
        "parameterTypes": [
          "net.ideahut.springboot.mapper.DataMapper",
          "org.springframework.data.redis.core.RedisTemplate",
          "net.ideahut.springboot.entity.EntityTrxManager"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.HandlerConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.HandlerConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.HandlerConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.RedisConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "appProperties"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "commonRedis",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.RedisConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.RedisConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.RedisConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.ServiceConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.ServiceConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.TaskConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "appProperties"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "auditTask",
        "parameterTypes": [ ]
      },
      {
        "name": "commonTask",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.TaskConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.TaskConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.TaskConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.TrxManagerConfig1",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "appProperties"
      },
      {
        "name": "environment"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "auditDatasource",
        "parameterTypes": [ ]
      },
      {
        "name": "auditSessionFactory",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "dataSource",
        "parameterTypes": [ ]
      },
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
          "javax.sql.DataSource",
          "org.hibernate.SessionFactory"
        ]
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.TrxManagerConfig1$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.TrxManagerConfig1$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.TrxManagerConfig1$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "net.ideahut.springboot.template.config.WebMvcConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "adminHandler"
      },
      {
        "name": "dataMapper"
      },
      {
        "name": "requestInterceptor"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.config.WebMvcConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.AdminController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "adminHandler"
      },
      {
        "name": "dataMapper"
      }
    ],
    "methods": [
      {
        "name": "crud",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.AuditController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "auditHandler"
      },
      {
        "name": "entityTrxManager"
      }
    ],
    "methods": [
      {
        "name": "bytes",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "list",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.CacheController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "cacheGroupHandler"
      }
    ],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": [ ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "keys",
        "parameterTypes": [ ]
      },
      {
        "name": "size",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.CrudController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "handler"
      },
      {
        "name": "permission"
      }
    ],
    "methods": [
      {
        "name": "action",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "collection",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Integer",
          "java.lang.Integer",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "infoConstant",
        "parameterTypes": [ ]
      },
      {
        "name": "object",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "parameter",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.GridController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "gridHandler"
      }
    ],
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.MailController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "mailHandler"
      }
    ],
    "methods": [
      {
        "name": "sendAsync",
        "parameterTypes": [
          "net.ideahut.springboot.template.controller.MailController$Form"
        ]
      },
      {
        "name": "sendSync",
        "parameterTypes": [
          "net.ideahut.springboot.template.controller.MailController$Form"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.MailController$Form",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAttachment",
        "parameterTypes": [ ]
      },
      {
        "name": "getBcc",
        "parameterTypes": [ ]
      },
      {
        "name": "getCc",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      },
      {
        "name": "getFrom",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubject",
        "parameterTypes": [ ]
      },
      {
        "name": "getTo",
        "parameterTypes": [ ]
      },
      {
        "name": "setAttachment",
        "parameterTypes": [
          "org.springframework.web.multipart.MultipartFile"
        ]
      },
      {
        "name": "setBcc",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCc",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFrom",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTo",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.MenuController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "dataMapper"
      },
      {
        "name": "gridHandler"
      }
    ],
    "methods": [
      {
        "name": "list",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.MessageController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "messageService"
      }
    ],
    "methods": [
      {
        "name": "mobile",
        "parameterTypes": [ ]
      },
      {
        "name": "portal",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.ReplicaController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "entityTrxManager"
      }
    ],
    "methods": [
      {
        "name": "createInformationLinkReplica",
        "parameterTypes": [ ]
      },
      {
        "name": "createInformationReplica",
        "parameterTypes": [ ]
      },
      {
        "name": "sqlInformationLinkReplica",
        "parameterTypes": [ ]
      },
      {
        "name": "sqlInformationReplica",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.repo.AutoGenStrIdHardDelController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "entityTrxManager"
      },
      {
        "name": "repo"
      }
    ],
    "methods": [
      {
        "name": "byId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.AutoGenStrIdHardDel"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "page",
        "parameterTypes": [
          "java.lang.Integer",
          "java.lang.Integer",
          "java.lang.String"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "net.ideahut.springboot.template.entity.AutoGenStrIdHardDel"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.repo.EmbeddedHardDelController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "entityTrxManager"
      },
      {
        "name": "repo"
      }
    ],
    "methods": [
      {
        "name": "byId",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.EmbededId"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.EmbeddedHardDel"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.EmbededId"
        ]
      },
      {
        "name": "page",
        "parameterTypes": [
          "java.lang.Integer",
          "java.lang.Integer",
          "java.lang.String"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.EmbededId",
          "net.ideahut.springboot.template.entity.EmbeddedHardDel"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.repo.ManualGenStrIdSoftDelController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "entityTrxManager"
      },
      {
        "name": "repo"
      }
    ],
    "methods": [
      {
        "name": "byId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.ManualGenStrIdSoftDel"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "page",
        "parameterTypes": [
          "java.lang.Integer",
          "java.lang.Integer",
          "java.lang.String"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "net.ideahut.springboot.template.entity.ManualGenStrIdSoftDel"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.TestController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "adminCredential"
      },
      {
        "name": "auditHandler"
      },
      {
        "name": "crudHandler"
      },
      {
        "name": "dataMapper"
      },
      {
        "name": "entityTrxManager"
      },
      {
        "name": "sysParamHandler"
      },
      {
        "name": "taskHandler"
      }
    ],
    "methods": [
      {
        "name": "adminReload",
        "parameterTypes": [ ]
      },
      {
        "name": "auditBytes",
        "parameterTypes": [ ]
      },
      {
        "name": "crud",
        "parameterTypes": [ ]
      },
      {
        "name": "crud_rest",
        "parameterTypes": [ ]
      },
      {
        "name": "crudRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "emitter",
        "parameterTypes": [ ]
      },
      {
        "name": "getResultAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResultSync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "halo",
        "parameterTypes": [ ]
      },
      {
        "name": "insert",
        "parameterTypes": [ ]
      },
      {
        "name": "query",
        "parameterTypes": [ ]
      },
      {
        "name": "replica",
        "parameterTypes": [ ]
      },
      {
        "name": "sseemitter",
        "parameterTypes": [ ]
      },
      {
        "name": "streamData",
        "parameterTypes": [ ]
      },
      {
        "name": "streaming",
        "parameterTypes": [ ]
      },
      {
        "name": "sysParamMaps",
        "parameterTypes": [ ]
      },
      {
        "name": "sysParamValue",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.controller.WarmUpController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "post",
        "parameterTypes": [
          "net.ideahut.springboot.init.InitRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.AutoGenLongIdHardDel",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.AutoGenStrIdHardDel",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "date"
      }
    ],
    "methods": [
      {
        "name": "getCondition",
        "parameterTypes": [ ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setCondition",
        "parameterTypes": [
          "net.ideahut.springboot.crud.Condition"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.AutoGenStrIdSoftDel",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.CompositeHardDel",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.CompositeSoftDel",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.EmbeddedHardDel",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.EmbededId"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.EmbeddedSoftDel",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.EmbededId"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.EmbeddedWithoutAttribute",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.EmbededId"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.EmbededId",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.Information",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "imageBytes"
      }
    ],
    "methods": [
      {
        "name": "getContent",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getImage",
        "parameterTypes": [ ]
      },
      {
        "name": "getImageBytes",
        "parameterTypes": [ ]
      },
      {
        "name": "getInformationId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsExternal",
        "parameterTypes": [ ]
      },
      {
        "name": "getLinks",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeqno",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImageBytes",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "setInformationId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setIsExternal",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setLinks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSeqno",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.InformationLink",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getInformation",
        "parameterTypes": [ ]
      },
      {
        "name": "getLabel",
        "parameterTypes": [ ]
      },
      {
        "name": "getLinkId",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeqno",
        "parameterTypes": [ ]
      },
      {
        "name": "getTarget",
        "parameterTypes": [ ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInformation",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.Information"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLinkId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeqno",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.IntegerIdWithBytes",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBytes",
        "parameterTypes": [ ]
      },
      {
        "name": "getData",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setBytes",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.JobGroup",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroupId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getTriggers",
        "parameterTypes": [ ]
      },
      {
        "name": "getZoneOffsetSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroupId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTriggers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setZoneOffsetSeconds",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.JobInstance",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAuthHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getBaseUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstanceId",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setAuthHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBaseUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstanceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.JobTrigger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getConfigurations",
        "parameterTypes": [ ]
      },
      {
        "name": "getCronExpression",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroup",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsRunOnStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsSaveResult",
        "parameterTypes": [ ]
      },
      {
        "name": "getLastRunData",
        "parameterTypes": [ ]
      },
      {
        "name": "getLastRunTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getTriggerId",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getZoneOffsetSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "setConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCronExpression",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.JobGroup"
        ]
      },
      {
        "name": "setInstance",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.JobInstance"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setIsRunOnStartup",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setIsSaveResult",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setLastRunData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastRunTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTriggerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.JobType"
        ]
      },
      {
        "name": "setZoneOffsetSeconds",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.JobTriggerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBase64Bytes",
        "parameterTypes": [ ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [ ]
      },
      {
        "name": "getHasBytes",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getJobTrigger",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "getValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getValue",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBase64Bytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBytes",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "setHasBytes",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.JobTriggerConfigurationId"
        ]
      },
      {
        "name": "setJobTrigger",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.JobTrigger"
        ]
      },
      {
        "name": "setTypeParameter",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.JobTypeParameter"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.JobTriggerConfigurationId",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getParameterName",
        "parameterTypes": [ ]
      },
      {
        "name": "getTriggerId",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeId",
        "parameterTypes": [ ]
      },
      {
        "name": "setParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTriggerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTypeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.JobType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getClassname",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsRunning",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsSaveResult",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsSingleRun",
        "parameterTypes": [ ]
      },
      {
        "name": "getLastRunData",
        "parameterTypes": [ ]
      },
      {
        "name": "getLastRunTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getLastRunTriggerId",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getTriggers",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeId",
        "parameterTypes": [ ]
      },
      {
        "name": "setClassname",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsRunning",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setIsSaveResult",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setIsSingleRun",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setLastRunData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastRunTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLastRunTriggerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParameters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTriggers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTypeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.JobTypeParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.JobTypeParameterId"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.JobType"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.JobTypeParameterId",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getParameterName",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeId",
        "parameterTypes": [ ]
      },
      {
        "name": "setParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTypeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.LongIdJoinComposite",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getComposite",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setComposite",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.CompositeHardDel"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.LongIdJoinEmbedded",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getEmbedded",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbedded",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.EmbeddedHardDel"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.ManualGenStrIdSoftDel",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.Menu",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getIcon",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getLink",
        "parameterTypes": [ ]
      },
      {
        "name": "getParent",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeqno",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "setChildren",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.MenuId"
        ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.Menu"
        ]
      },
      {
        "name": "setSeqno",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.MenuId",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMenuCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getMenuType",
        "parameterTypes": [ ]
      },
      {
        "name": "setMenuCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMenuType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.MenuRole",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getMenu",
        "parameterTypes": [ ]
      },
      {
        "name": "getRole",
        "parameterTypes": [ ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.MenuRoleId"
        ]
      },
      {
        "name": "setMenu",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.Menu"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.Role"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.MenuRoleId",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMenuCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getMenuType",
        "parameterTypes": [ ]
      },
      {
        "name": "getRoleCode",
        "parameterTypes": [ ]
      },
      {
        "name": "setMenuCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMenuType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.Role",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getIsActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsAdmin",
        "parameterTypes": [ ]
      },
      {
        "name": "getMenus",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getRoleCode",
        "parameterTypes": [ ]
      },
      {
        "name": "setIsActive",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setIsAdmin",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setMenus",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.SysParam",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBytes",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getValue",
        "parameterTypes": [ ]
      },
      {
        "name": "setBytes",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.SysParamId"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.SysParamId",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getParamCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getSysCode",
        "parameterTypes": [ ]
      },
      {
        "name": "setParamCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSysCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.User",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getDetail",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getUserId",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDetail",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.UserDetail"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.UserDetail",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getFullname",
        "parameterTypes": [ ]
      },
      {
        "name": "getGender",
        "parameterTypes": [ ]
      },
      {
        "name": "getUser",
        "parameterTypes": [ ]
      },
      {
        "name": "getUserId",
        "parameterTypes": [ ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFullname",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGender",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.User"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.UserFavorite",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCreatedOn",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getOther",
        "parameterTypes": [ ]
      },
      {
        "name": "getUser",
        "parameterTypes": [ ]
      },
      {
        "name": "setCreatedOn",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.UserFavoriteId"
        ]
      },
      {
        "name": "setOther",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.User"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "net.ideahut.springboot.template.entity.User"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.entity.UserFavoriteId",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getOtherId",
        "parameterTypes": [ ]
      },
      {
        "name": "getUserId",
        "parameterTypes": [ ]
      },
      {
        "name": "setOtherId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.interceptor.RequestInterceptor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "adminCredential"
      },
      {
        "name": "adminHandler"
      },
      {
        "name": "adminSecurity"
      },
      {
        "name": "appProperties"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.listener.EntityPostListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "auditHandler"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.listener.EntityPreListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.AppProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdmin",
        "parameterTypes": [ ]
      },
      {
        "name": "getAudit",
        "parameterTypes": [ ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getCors",
        "parameterTypes": [ ]
      },
      {
        "name": "getGridLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnoredHandlerClasses",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstanceId",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoggingError",
        "parameterTypes": [ ]
      },
      {
        "name": "getMail",
        "parameterTypes": [ ]
      },
      {
        "name": "getMessagePath",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedis",
        "parameterTypes": [ ]
      },
      {
        "name": "getReportPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getTask",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdmin",
        "parameterTypes": [
          "net.ideahut.springboot.template.properties.AppProperties$Admin"
        ]
      },
      {
        "name": "setAudit",
        "parameterTypes": [
          "net.ideahut.springboot.template.properties.AppProperties$Audit"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "net.ideahut.springboot.template.properties.AppProperties$Cache"
        ]
      },
      {
        "name": "setCors",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setGridLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoredHandlerClasses",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInstanceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoggingError",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMail",
        "parameterTypes": [
          "net.ideahut.springboot.mail.MailProperties"
        ]
      },
      {
        "name": "setMessagePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRedis",
        "parameterTypes": [
          "net.ideahut.springboot.template.properties.AppProperties$Redis"
        ]
      },
      {
        "name": "setReportPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTask",
        "parameterTypes": [
          "net.ideahut.springboot.template.properties.AppProperties$Task"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.AppProperties$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.AppProperties$Admin",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfigFile",
        "parameterTypes": [ ]
      },
      {
        "name": "getCredentialFile",
        "parameterTypes": [ ]
      },
      {
        "name": "setConfigFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCredentialFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.AppProperties$Audit",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "net.ideahut.springboot.audit.DatabaseAuditProperties"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.AppProperties$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroups",
        "parameterTypes": [ ]
      },
      {
        "name": "setGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.AppProperties$Database",
    "methods": [
      {
        "name": "getDatasource",
        "parameterTypes": [ ]
      },
      {
        "name": "getJpa",
        "parameterTypes": [ ]
      },
      {
        "name": "setDatasource",
        "parameterTypes": [
          "net.ideahut.springboot.template.properties.AppProperties$Datasource"
        ]
      },
      {
        "name": "setJpa",
        "parameterTypes": [
          "net.ideahut.springboot.template.properties.AppProperties$Jpa"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.AppProperties$Datasource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getJndiName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.AppProperties$Jpa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabase",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.AppProperties$Redis",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCommon",
        "parameterTypes": [ ]
      },
      {
        "name": "setCommon",
        "parameterTypes": [
          "net.ideahut.springboot.redis.RedisProperties"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.AppProperties$Task",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAudit",
        "parameterTypes": [ ]
      },
      {
        "name": "getCommon",
        "parameterTypes": [ ]
      },
      {
        "name": "setAudit",
        "parameterTypes": [
          "net.ideahut.springboot.task.TaskProperties"
        ]
      },
      {
        "name": "setCommon",
        "parameterTypes": [
          "net.ideahut.springboot.task.TaskProperties"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.OtherProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrxManager",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrxManager",
        "parameterTypes": [
          "net.ideahut.springboot.template.properties.OtherProperties$TrxManager"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.OtherProperties$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.OtherProperties$TrxManager",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecond",
        "parameterTypes": [ ]
      },
      {
        "name": "setSecond",
        "parameterTypes": [
          "net.ideahut.springboot.template.properties.OtherProperties$TrxManagerCfg"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.properties.OtherProperties$TrxManagerCfg",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAudit",
        "parameterTypes": [ ]
      },
      {
        "name": "setAudit",
        "parameterTypes": [
          "net.ideahut.springboot.template.properties.AppProperties$Audit"
        ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.repo.AutoGenStrIdHardDelRepo",
    "allPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.template.repo.EmbeddedHardDelRepo",
    "allPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.template.repo.ManualGenStrIdSoftDelRepo",
    "allPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.template.service.JobServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "crudHandler"
      },
      {
        "name": "entityTrxManager"
      },
      {
        "name": "taskHandler"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "net.ideahut.springboot.template.service.MessageService",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.ideahut.springboot.template.service.MessageServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "appProperties"
      },
      {
        "name": "dataMapper"
      },
      {
        "name": "redisTemplate"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.service.jta.platform.internal.NoJtaPlatform",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.quartz.impl.StdSchedulerFactory",
    "condition": {
      "typeReachable": "org.springframework.scheduling.quartz.SchedulerFactoryBean"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springframework.aop.Advisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.BeanInfoFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeoutPerShutdownPhase",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.redis.RedisProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "redisConnectionFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.PropertiesRedisConnectionDetails",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "redisConnectionDetails",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
        ]
      },
      {
        "name": "redisTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.RedisConnectionFactory"
        ]
      },
      {
        "name": "stringRedisTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.RedisConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientName",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientType",
        "parameterTypes": [ ]
      },
      {
        "name": "getCluster",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabase",
        "parameterTypes": [ ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      },
      {
        "name": "getJedis",
        "parameterTypes": [ ]
      },
      {
        "name": "getLettuce",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getSentinel",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientType",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType"
        ]
      },
      {
        "name": "setCluster",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSentinel",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "getNodes",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxRedirects",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNodes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Jedis",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCluster",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdownTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setShutdownTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRefresh",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAdaptive",
        "parameterTypes": [ ]
      },
      {
        "name": "isDynamicRefreshSources",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdaptive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDynamicRefreshSources",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxWait",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeBetweenEvictionRuns",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxActive",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxWait",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMinIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTimeBetweenEvictionRuns",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaster",
        "parameterTypes": [ ]
      },
      {
        "name": "getNodes",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaster",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNodes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      },
      {
        "name": "pageableCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "sortCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageable",
        "parameterTypes": [ ]
      },
      {
        "name": "getSort",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getQualifierDelimiter",
        "parameterTypes": [ ]
      },
      {
        "name": "getSizeParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "isOneIndexedParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPageParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSizeParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSortParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "gson",
        "parameterTypes": [
          "com.google.gson.GsonBuilder"
        ]
      },
      {
        "name": "gsonBuilder",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "standardGsonBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.gson.GsonProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisableHtmlEscaping",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisableInnerClassSerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnableComplexMapKeySerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludeFieldsWithoutExposeAnnotation",
        "parameterTypes": [ ]
      },
      {
        "name": "getFieldNamingPolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "getGenerateNonExecutableJson",
        "parameterTypes": [ ]
      },
      {
        "name": "getLenient",
        "parameterTypes": [ ]
      },
      {
        "name": "getLongSerializationPolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrettyPrinting",
        "parameterTypes": [ ]
      },
      {
        "name": "getSerializeNulls",
        "parameterTypes": [ ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisableHtmlEscaping",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDisableInnerClassSerialization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnableComplexMapKeySerialization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExcludeFieldsWithoutExposeAnnotation",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFieldNamingPolicy",
        "parameterTypes": [
          "com.google.gson.FieldNamingPolicy"
        ]
      },
      {
        "name": "setGenerateNonExecutableJson",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLenient",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLongSerializationPolicy",
        "parameterTypes": [
          "com.google.gson.LongSerializationPolicy"
        ]
      },
      {
        "name": "setPrettyPrinting",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSerializeNulls",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "stringHttpMessageConverter",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "mappingJackson2HttpMessageConverter",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "mappingJackson2XmlHttpMessageConverter",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBuild",
        "parameterTypes": [ ]
      },
      {
        "name": "getGit",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConstructorDetector",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatatype",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultLeniency",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPropertyInclusion",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeserialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getGenerator",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "getParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertyNamingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getSerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeZone",
        "parameterTypes": [ ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [ ]
      },
      {
        "name": "setConstructorDetector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
        ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultLeniency",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultPropertyInclusion",
        "parameterTypes": [
          "com.fasterxml.jackson.annotation.JsonInclude$Include"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setPropertyNamingStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnum",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsonNode",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getEmbeddedDatabaseConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getJndiName",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getXa",
        "parameterTypes": [ ]
      },
      {
        "name": "isGenerateUniqueName",
        "parameterTypes": [ ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbeddedDatabaseConnection",
        "parameterTypes": [
          "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        ]
      },
      {
        "name": "setGenerateUniqueName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXa",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcClient",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTemplate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFetchSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRows",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueryTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setFetchSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxRows",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueryTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcTemplate",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "hikariPoolDataSourceMetadataProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "namedParameterJdbcTemplate",
        "parameterTypes": [
          "org.springframework.jdbc.core.JdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDdlAuto",
        "parameterTypes": [ ]
      },
      {
        "name": "getNaming",
        "parameterTypes": [ ]
      },
      {
        "name": "setDdlAuto",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getImplicitStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getPhysicalStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setImplicitStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhysicalStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "queriedMethods": [
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabase",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabasePlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "getMappingResources",
        "parameterTypes": [ ]
      },
      {
        "name": "getOpenInView",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "isGenerateDdl",
        "parameterTypes": [ ]
      },
      {
        "name": "isShowSql",
        "parameterTypes": [ ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOpenInView",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "quartzScheduler",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.quartz.QuartzProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "java.util.Map",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.QuartzProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbc",
        "parameterTypes": [ ]
      },
      {
        "name": "getJobStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchedulerName",
        "parameterTypes": [ ]
      },
      {
        "name": "getStartupDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "isAutoStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "isOverwriteExistingJobs",
        "parameterTypes": [ ]
      },
      {
        "name": "isWaitForJobsToCompleteOnShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "setAutoStartup",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJobStoreType",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.quartz.JobStoreType"
        ]
      },
      {
        "name": "setOverwriteExistingJobs",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchedulerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartupDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setWaitForJobsToCompleteOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.QuartzProperties$Jdbc",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCommentPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitializeSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "setCommentPrefix",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInitializeSchema",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataSourceScriptDatabaseInitializer",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchemaLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeparator",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "isContinueOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "setContinueOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDataLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeystore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTruststore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties$Store",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeystore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTruststore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties$Store",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrivateKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isVerifyKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifyKeys",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      },
      {
        "name": "fileWatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "sslBundleRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "sslPropertiesSslBundleRegistrar",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.FileWatcher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties",
    "methods": [
      {
        "name": "getKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "isReloadOnUpdate",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReloadOnUpdate",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Key",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getJks",
        "parameterTypes": [ ]
      },
      {
        "name": "getPem",
        "parameterTypes": [ ]
      },
      {
        "name": "getWatch",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFile",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch$File",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getQuietPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setQuietPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSimple",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCoreSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConcurrencyLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "setConcurrencyLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskExecutorBuilder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.TaskExecutorBuilder",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "threadPoolTaskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskSchedulerBuilder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "threadPoolTaskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSimple",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConcurrencyLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "setConcurrencyLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionTemplate",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "transactionExecutionListeners",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRollbackOnCommitFailure",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "httpMessageConvertersRestClientCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restClientBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer"
        ]
      },
      {
        "name": "restClientBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restClientSsl",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientSsl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "restTemplateBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
        ]
      },
      {
        "name": "restTemplateBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeBindingErrors",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeStacktrace",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getWhitelabel",
        "parameterTypes": [ ]
      },
      {
        "name": "isIncludeException",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getCompression",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      },
      {
        "name": "getForwardHeadersStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttp2",
        "parameterTypes": [ ]
      },
      {
        "name": "getJetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpRequestHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getNetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getServerHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "getTomcat",
        "parameterTypes": [ ]
      },
      {
        "name": "getUndertow",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setMaxHttpRequestHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCustomFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnorePaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getRetentionPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFormat",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
        ]
      },
      {
        "name": "setIgnorePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getMin",
        "parameterTypes": [ ]
      },
      {
        "name": "getSelectors",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSelectors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getH2cMaxContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitialBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "isValidateHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setH2cMaxContentLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setInitialBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setValidateHeaders",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsp",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalTldSkipPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "getBackgroundProcessorDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasedir",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAliveTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSwallowSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMbeanregistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getProcessorCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirectContextRoot",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedPathChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedQueryChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteip",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getUriEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "isRejectIllegalHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseRelativeRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAdditionalTldSkipPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setKeepAliveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxSwallowSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setProcessorCache",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRejectIllegalHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRelaxedPathChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRelaxedQueryChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setUseRelativeRedirects",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionIf",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionUnless",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxDays",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "isBuffered",
        "parameterTypes": [ ]
      },
      {
        "name": "isCheckExists",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isIpv6Canonical",
        "parameterTypes": [ ]
      },
      {
        "name": "isRenameOnRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "isRequestAttributesEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "setBuffered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConditionIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConditionUnless",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIpv6Canonical",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenameOnRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequestAttributesEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getHostHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getInternalProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "getPortHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeaderHttpsValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteIpHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustedProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "setHostHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternalProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPortHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeaderHttpsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemoteIpHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustedProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheTtl",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCaching",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCaching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinSpare",
        "parameterTypes": [ ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinSpare",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getDecodeSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectBuffers",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxCookies",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrlCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowEncodedSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "isAlwaysSetKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "isDecodeUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "isEagerFilterInit",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreservePathOnForward",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowEncodedSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAlwaysSetKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setDecodeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDecodeUrl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDirectBuffers",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEagerFilterInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxCookies",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxHeaders",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxParameters",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNoRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPreservePathOnForward",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "setDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocket",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getIo",
        "parameterTypes": [ ]
      },
      {
        "name": "getWorker",
        "parameterTypes": [ ]
      },
      {
        "name": "setIo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWorker",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServlet",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServletRegistration",
        "parameterTypes": [
          "org.springframework.web.servlet.DispatcherServlet",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "error",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "errorHtml",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "mediaTypeNotAcceptable",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "basicErrorController",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": [ ]
      },
      {
        "name": "errorPageCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      },
      {
        "name": "preserveErrorControllerTargetClassPostProcessor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      },
      {
        "name": "conventionErrorViewResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "beanNameViewResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultErrorView",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "characterEncodingFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "localeCharsetMappingsCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      },
      {
        "name": "multipartConfigElement",
        "parameterTypes": [ ]
      },
      {
        "name": "multipartResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileSizeThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxFileSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRequestSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isResolveLazily",
        "parameterTypes": [ ]
      },
      {
        "name": "isStrictServletCompliance",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFileSizeThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setResolveLazily",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStrictServletCompliance",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "tomcatServletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatServletWebServerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsync",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentnegotiation",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getMessageCodesResolverFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathmatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getView",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "isDispatchOptionsRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isDispatchTraceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogResolvedException",
        "parameterTypes": [ ]
      },
      {
        "name": "isPublishRequestHandledEvents",
        "parameterTypes": [ ]
      },
      {
        "name": "isThrowExceptionIfNoHandlerFound",
        "parameterTypes": [ ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogResolvedException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessageCodesResolverFormat",
        "parameterTypes": [
          "org.springframework.validation.DefaultMessageCodesResolver$Format"
        ]
      },
      {
        "name": "setPublishRequestHandledEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThrowExceptionIfNoHandlerFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMediaTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameterName",
        "parameterTypes": [ ]
      },
      {
        "name": "isFavorParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "setFavorParameter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMediaTypes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMatchingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setMatchingStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoadOnStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getServletMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "getServletPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocaleResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "getResources",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setLocaleResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getChain",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "isAddMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachecontrol",
        "parameterTypes": [ ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLastModified",
        "parameterTypes": [ ]
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseLastModified",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePrivate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePublic",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getMustRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoTransform",
        "parameterTypes": [ ]
      },
      {
        "name": "getProxyRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getSMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleIfError",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleWhileRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setCachePrivate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCachePublic",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMustRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoCache",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoStore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoTransform",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProxyRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleIfError",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleWhileRevalidate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "isCache",
        "parameterTypes": [ ]
      },
      {
        "name": "isCompressed",
        "parameterTypes": [ ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCompressed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixed",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "websocketServletWebServerCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.CorrelationIdConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "getAdditionalProfiles",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnvironmentPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitializers",
        "parameterTypes": [ ]
      },
      {
        "name": "getListeners",
        "parameterTypes": [ ]
      },
      {
        "name": "getMainApplicationClass",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "getSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getSpringBootExceptionHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebApplicationType",
        "parameterTypes": [ ]
      },
      {
        "name": "isKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddCommandLineProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAddConversionService",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAdditionalProfiles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationContextFactory",
        "parameterTypes": [
          "org.springframework.boot.ApplicationContextFactory"
        ]
      },
      {
        "name": "setApplicationStartup",
        "parameterTypes": [
          "org.springframework.core.metrics.ApplicationStartup"
        ]
      },
      {
        "name": "setBanner",
        "parameterTypes": [
          "org.springframework.boot.Banner"
        ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "setBeanNameGenerator",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanNameGenerator"
        ]
      },
      {
        "name": "setDefaultProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "setEnvironmentPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeadless",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMainApplicationClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.client.RestClientCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludedUserAgents",
        "parameterTypes": [ ]
      },
      {
        "name": "getMimeTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinResponseSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExcludedUserAgents",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDomain",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttpOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getSameSite",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSameSite",
        "parameterTypes": [
          "org.springframework.boot.web.server.Cookie$SameSite"
        ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientAuth",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setClientAuth",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl$ClientAuth"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setKeyAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "isForce",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getRegistered",
        "parameterTypes": [ ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "getSessionStoreDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getStoreDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrackingModes",
        "parameterTypes": [ ]
      },
      {
        "name": "isPersistent",
        "parameterTypes": [ ]
      },
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStoreDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Phased",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.weaving.LoadTimeWeaverAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.InputStreamSource",
    "methods": [
      {
        "name": "getInputStream",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.Resource",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getContentAsByteArray",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getFile",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getURI",
        "parameterTypes": [ ]
      },
      {
        "name": "getURL",
        "parameterTypes": [ ]
      },
      {
        "name": "isFile",
        "parameterTypes": [ ]
      },
      {
        "name": "isOpen",
        "parameterTypes": [ ]
      },
      {
        "name": "isReadable",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.ResourceEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.EntityConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.EntityReader",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.EntityWriter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.Example",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.AbstractAuditable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.AbstractPersistable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingEntityListener",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaContext",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "setMappingContext",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityPathResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setQueryMethodFactory",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.keyvalue.annotation.KeySpace",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.AbstractKeyValueAdapter",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.KeyValueAdapter",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.KeyValueOperations",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.KeyValueTemplate",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.mapping.context.KeyValueMappingContext",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.config.QueryCreatorType",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.KeyValueRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.query.KeyValuePartTreeQuery",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.support.SimpleKeyValueRepository",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.DefaultedRedisClusterConnection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.DefaultedRedisConnection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.jedis.JedisConnectionFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.MessageListener",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterGeoCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterHashCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterHyperLogLogCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterKeyCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterListCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterScriptingCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterServerCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterStreamCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterStringCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterZSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveGeoCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveHashCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveHyperLogLogCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveKeyCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveListCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactivePubSubCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveRedisConnection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveScriptingCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveServerCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveStreamCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveStringCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveZSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisClusterCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnectionCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnectionFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisGeoCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisHashCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisHyperLogLogCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisKeyCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisListCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisPubSubCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisScriptingCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisServerCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisStreamCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisStringCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisTxCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisZSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.StringRedisConnection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundGeoOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundHashOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundKeyOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundListOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundOperationsProxyFactory$DefaultBoundKeyOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundSetOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundStreamOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundValueOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundZSetOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.KeyspaceConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.convert.MappingConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider",
          "org.springframework.data.redis.core.convert.KeyspaceConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.convert.MappingRedisConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setCustomConversions",
        "parameterTypes": [
          "org.springframework.data.convert.CustomConversions"
        ]
      },
      {
        "name": "setReferenceResolver",
        "parameterTypes": [
          "org.springframework.data.redis.core.convert.ReferenceResolver"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.mapping.RedisMappingContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.convert.RedisConverter",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.RedisCustomConversions",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.convert.ReferenceResolver",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.ReferenceResolverImpl",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisOperations"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.DefaultGeoOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultHashOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultKeyOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultListOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultSetOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultStreamOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultValueOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultZSetOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.GeoOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.HashOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.index.IndexConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.index.IndexDefinitionProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.index.IndexDefinitionRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ListOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.mapping.RedisMappingContext",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.convert.MappingConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.ReactiveRedisOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ReactiveRedisTemplate",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.RedisKeyValueAdapter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setEnableKeyspaceEvents",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisKeyValueAdapter$EnableKeyspaceEvents"
        ]
      },
      {
        "name": "setKeyspaceNotificationsConfigParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShadowCopy",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisKeyValueAdapter$ShadowCopy"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisOperations",
          "org.springframework.data.redis.core.convert.RedisConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.RedisKeyValueTemplate",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisKeyValueAdapter",
          "org.springframework.data.redis.core.mapping.RedisMappingContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.RedisOperations",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.RedisTemplate",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.SetOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.StreamOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.StringRedisTemplate",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ValueOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ZSetOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.listener.RedisMessageListenerContainer",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.repository.query.RedisQueryCreator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.repository.support.RedisRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryConfigurationExtension",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryMetadata",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "setEnableDefaultTransactions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.ExtensionIdAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.CustomCollectionRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.ProxyUtils$ProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "projectingArgumentResolverBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonGeoModule",
        "parameterTypes": [ ]
      },
      {
        "name": "pageModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "offsetResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "pageableResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "sortResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.SortArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.CacheControl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHeaderValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.ContentDisposition",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getCreationDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getModificationDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getReadDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isAttachment",
        "parameterTypes": [ ]
      },
      {
        "name": "isFormData",
        "parameterTypes": [ ]
      },
      {
        "name": "isInline",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.ProblemDetailJacksonXmlMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetail",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.HttpEntity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBody",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeaders",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpHeaders",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAccept",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptLanguage",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptLanguageAsLocales",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptPatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlAllowCredentials",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlAllowHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlAllowMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlAllowOrigin",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlExposeHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlRequestHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlRequestMethod",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllow",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheControl",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentDisposition",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentLanguage",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentType",
        "parameterTypes": [ ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getETag",
        "parameterTypes": [ ]
      },
      {
        "name": "getExpires",
        "parameterTypes": [ ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      },
      {
        "name": "getIfMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getIfModifiedSince",
        "parameterTypes": [ ]
      },
      {
        "name": "getIfNoneMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getIfUnmodifiedSince",
        "parameterTypes": [ ]
      },
      {
        "name": "getLastModified",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrigin",
        "parameterTypes": [ ]
      },
      {
        "name": "getPragma",
        "parameterTypes": [ ]
      },
      {
        "name": "getRange",
        "parameterTypes": [ ]
      },
      {
        "name": "getUpgrade",
        "parameterTypes": [ ]
      },
      {
        "name": "getVary",
        "parameterTypes": [ ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      },
      {
        "name": "setAccept",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAcceptCharset",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAcceptLanguage",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAcceptLanguageAsLocales",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAcceptPatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlAllowCredentials",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAccessControlAllowHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlAllowMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlAllowOrigin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAccessControlExposeHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAccessControlMaxAge",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAccessControlRequestHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlRequestMethod",
        "parameterTypes": [
          "org.springframework.http.HttpMethod"
        ]
      },
      {
        "name": "setAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setAllow",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setBasicAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBearerAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCacheControl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCacheControl",
        "parameterTypes": [
          "org.springframework.http.CacheControl"
        ]
      },
      {
        "name": "setConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnection",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setContentDisposition",
        "parameterTypes": [
          "org.springframework.http.ContentDisposition"
        ]
      },
      {
        "name": "setContentLanguage",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setContentLength",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setETag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.net.InetSocketAddress"
        ]
      },
      {
        "name": "setIfMatch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIfMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIfNoneMatch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIfNoneMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setOrigin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPragma",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRange",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUpgrade",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVary",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpMethod",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpRange",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getReasonPhrase",
        "parameterTypes": [ ]
      },
      {
        "name": "is1xxInformational",
        "parameterTypes": [ ]
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": [ ]
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": [ ]
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": [ ]
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": [ ]
      },
      {
        "name": "isError",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpStatusCode",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "is1xxInformational",
        "parameterTypes": [ ]
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": [ ]
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": [ ]
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": [ ]
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": [ ]
      },
      {
        "name": "isError",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getQualityValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaTypeEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.ProblemDetail",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetail",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setDetail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstance",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.springframework.http.HttpStatus"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.net.URI"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.ResponseEntity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getStatusCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatusCodeValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
    "condition": {
      "typeReachable": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory"
    },
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.orm.hibernate5.LocalSessionFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "queriedMethods": [
      {
        "name": "createSharedEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.quartz.LocalDataSourceJobStore",
    "condition": {
      "typeReachable": "org.springframework.scheduling.quartz.SchedulerFactoryBean"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.scheduling.quartz.LocalTaskExecutorThreadPool",
    "condition": {
      "typeReachable": "org.springframework.scheduling.quartz.SchedulerFactoryBean"
    },
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setInstanceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstanceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.quartz.ResourceLoaderClassLoadHelper",
    "condition": {
      "typeReachable": "org.springframework.scheduling.quartz.SchedulerFactoryBean"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.scheduling.quartz.SchedulerFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.Isolation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.Propagation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.event.TransactionalEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.util.MimeType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubtype",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubtypeSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isConcrete",
        "parameterTypes": [ ]
      },
      {
        "name": "isWildcardSubtype",
        "parameterTypes": [ ]
      },
      {
        "name": "isWildcardType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.client.RestClient$Builder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.cors.CorsConfigurationSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.method.support.UriComponentsContributor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartFile",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBytes",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentType",
        "parameterTypes": [ ]
      },
      {
        "name": "getInputStream",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getOriginalFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "queriedMethods": [
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "flashMapManager",
        "parameterTypes": [ ]
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "localeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcValidator",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "themeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerAdapter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerInterceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.SseEmitter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.View",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.BeanNameViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.WebApplicationInitializer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  }
]
